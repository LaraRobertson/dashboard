{"version":3,"sources":["pages/posts.js","pages/users.js","components/LoginForm.js","pages/login.js","components/profile.js","components/Dashboard.js","utils/authConfig.js","utils/authProvider.js","providers/data.js","utils/dataProvider.js","components/MyUserMenu.js","components/MyAppBar.js","components/MyLayout.js","App.js","registerServiceWorker.js","index.js"],"names":["PostFilter","props","Filter","TextInput","label","source","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","PostList","List","filters","Datagrid","TextField","ReferenceField","EditButton","ShowButton","PostTitle","record","title","PostEdit","Edit","SimpleForm","disabled","multiline","PostCreate","Create","PostShow","Show","SimpleShowLayout","RichTextField","DateField","UserList","isSmall","useMediaQuery","theme","breakpoints","down","SimpleList","primaryText","name","secondaryText","username","tertiaryText","email","EmailField","mapDispatchToProps","userLogin","userLoginAction","connect","undefined","withStyles","spacing","createStyles","button","width","icon","marginRight","unit","classes","useEffect","console","log","location","window","href","searchParams","URL","code","get","state","CardActions","Button","variant","type","color","onClick","LoginPage","Login","ProfileContext","createContext","ProfileProvider","children","useState","profileVersion","setProfileVersion","context","useMemo","refreshProfile","currentVersion","Provider","value","useProfile","useContext","ProfileEdit","staticContext","dataProvider","useDataProvider","notify","useNotify","saving","setSaving","useGetIdentity","loaded","identity","handleSave","useCallback","values","updateUserProfile","data","onSuccess","_","onFailure","saveContext","save","SaveContext","validate","required","ImageInput","ImageField","Card","CardHeader","CardContent","process","auth0","Auth0Client","domain","authConfig","client_id","redirect_uri","cacheLocation","useRefreshTokens","login","url","loginWithRedirect","handleRedirectCallback","logout","isAuthenticated","then","origin","federated","Promise","resolve","checkError","status","reject","checkAuth","getTokenSilently","getPermissions","posts","users","comments","convertFileToBase64","file","reader","FileReader","onload","result","onerror","readAsDataURL","rawFile","addUserProfileOverrides","fakerestDataProvider","getUserProfile","profile","localStorage","getItem","JSON","parse","avatar","File","setItem","stringify","id","MyUserMenu","UserMenu","key","MenuItemLink","to","leftIcon","MyAppBar","createTheme","palette","mode","AppBar","userMenu","Box","flex","Typography","MyLayout","Layout","appBar","history","createHistory","secondary","main","overrides","MuiFormLabel","root","App","Admin","layout","authProvider","customRoutes","path","render","dashboard","Dashboard","loginPage","Resource","PostIcon","list","edit","create","show","UserIcon","ListGuesser","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.85450b5a.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n    Show,\r\n    ShowButton,\r\n    SimpleShowLayout,\r\n    RichTextField,\r\n    DateField,\r\n    List,\r\n    Edit,\r\n    Create,\r\n    Datagrid,\r\n    ReferenceField,\r\n    TextField,\r\n    EditButton,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    SimpleForm,\r\n    TextInput,\r\n    Filter,\r\n} from 'react-admin';\r\n\r\nconst PostFilter = props => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput\r\n            label=\"User\"\r\n            source=\"userId\"\r\n            reference=\"users\"\r\n            allowEmpty\r\n        >\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const PostList = props => (\r\n    <List {...props} filters={<PostFilter />}>\r\n        <Datagrid>\r\n            <TextField source=\"id\" />\r\n            <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\r\n                <TextField source=\"name\" />\r\n            </ReferenceField>\r\n            <TextField source=\"title\" />\r\n            <EditButton />\r\n            <ShowButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Post {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const PostEdit = props => (\r\n    <Edit title={<PostTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"title\" />\r\n            <TextInput multiline source=\"body\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const PostCreate = props => (\r\n    <Create {...props}>\r\n        <SimpleForm>\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"title\" />\r\n            <TextInput multiline source=\"body\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n\r\nexport const PostShow = props => (\r\n    <Show {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField source=\"title\" />\r\n            <TextField source=\"teaser\" />\r\n            <RichTextField source=\"body\" />\r\n            <DateField label=\"Publication date\" source=\"created_at\" />\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);\r\n","import * as React from 'react';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { SimpleList, List, Datagrid, EmailField, TextField } from 'react-admin';\r\n\r\nexport const UserList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <List title=\"All users\" {...props}>\r\n            {isSmall ? (\r\n                <SimpleList\r\n                    primaryText={record => record.name}\r\n                    secondaryText={record => record.username}\r\n                    tertiaryText={record => record.email}\r\n                />\r\n            ) : (\r\n                <Datagrid>\r\n                    <TextField source=\"id\" />\r\n                    <TextField source=\"name\" />\r\n                    <TextField source=\"username\" />\r\n                    <EmailField source=\"email\" />\r\n                </Datagrid>\r\n            )}\r\n        </List>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { userLogin as userLoginAction } from 'react-admin';\r\n\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = ({ spacing }) =>\r\n    createStyles({\r\n        button: {\r\n            width: '100%',\r\n        },\r\n        icon: {\r\n            marginRight: spacing.unit,\r\n        },\r\n    });\r\n\r\nconst LoginForm = ({ classes, userLogin }) => {\r\n    useEffect(() => {\r\n        console.log(\"login form rendered\")\r\n        const location = window.location.href;\r\n        const url = new URL(window.location.href);\r\n        const { searchParams } = url ;\r\n        const code = searchParams.get('code');\r\n        const state = searchParams.get('state');\r\n\r\n        // If code is present, we came back from the provider\r\n        if (code && state) {\r\n            console.log(\"oauth callback received\")\r\n            userLogin({ location });\r\n        }\r\n    }, [userLogin]);\r\n\r\n    const handleLogin = () => {\r\n        userLogin(); // Do not provide code, just trigger the redirection\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CardActions>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    onClick={handleLogin}\r\n                >\r\n                    Login\r\n                </Button>\r\n            </CardActions>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    userLogin: userLoginAction,\r\n}\r\n\r\n\r\nexport default connect(undefined, mapDispatchToProps)(withStyles(styles)(LoginForm));","import React from 'react';\r\nimport { Login } from 'react-admin';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nconst LoginPage = (props) => <Login {...props}><LoginForm /> </Login>;\r\n\r\nexport default LoginPage;","import React, {\r\n    createContext,\r\n    useState,\r\n    useCallback,\r\n    useMemo,\r\n    useContext\r\n} from \"react\";\r\nimport {\r\n    TextInput,\r\n    ImageInput,\r\n    ImageField,\r\n    SimpleForm,\r\n    required,\r\n    useDataProvider,\r\n    useNotify,\r\n    SaveContextProvider,\r\n    useGetIdentity\r\n} from \"react-admin\";\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n    const [profileVersion, setProfileVersion] = useState(0);\r\n    const context = useMemo(\r\n        () => ({\r\n            profileVersion,\r\n            refreshProfile: () =>\r\n                setProfileVersion((currentVersion) => currentVersion + 1)\r\n        }),\r\n        [profileVersion]\r\n    );\r\n\r\n    return (\r\n        <ProfileContext.Provider value={context}>\r\n            console.log(\"context-provide\");\r\n            {children}\r\n        </ProfileContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);\r\n\r\nexport const ProfileEdit = ({ staticContext, ...props }) => {\r\n    console.log(\"ProfileEdit\");\r\n    const dataProvider = useDataProvider();\r\n    const notify = useNotify();\r\n    const [saving, setSaving] = useState();\r\n    const { refreshProfile } = useProfile();\r\n\r\n    const { loaded, identity } = useGetIdentity();\r\n\r\n    const handleSave = useCallback(\r\n        (values) => {\r\n            setSaving(true);\r\n            dataProvider.updateUserProfile(\r\n                { data: values },\r\n                {\r\n                    onSuccess: ({ data }) => {\r\n                        setSaving(false);\r\n                        notify(\"Your profile has been updated\", \"info\", {\r\n                            _: \"Your profile has been updated\"\r\n                        });\r\n                        refreshProfile();\r\n                    },\r\n                    onFailure: () => {\r\n                        setSaving(false);\r\n                        notify(\r\n                            \"A technical error occured while updating your profile. Please try later.\",\r\n                            \"warning\",\r\n                            {\r\n                                _:\r\n                                    \"A technical error occured while updating your profile. Please try later.\"\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        },\r\n        [dataProvider, notify, refreshProfile]\r\n    );\r\n\r\n    const saveContext = useMemo(\r\n        () => ({\r\n            save: handleSave,\r\n            saving\r\n        }),\r\n        [saving, handleSave]\r\n    );\r\n\r\n    if (!loaded) {\r\n        return null;\r\n    }\r\n    return (\r\n        <SaveContextProvider value={saveContext}>\r\n            <SimpleForm save={handleSave} record={identity ? identity : {}}>\r\n                <TextInput source=\"fullName\" validate={required()} />\r\n                <ImageInput source=\"avatar\" validate={required()}>\r\n                    <ImageField />\r\n                </ImageInput>\r\n            </SimpleForm>\r\n        </SaveContextProvider>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport default () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);\r\n","export default {\r\n    domain: process.env.REACT_APP_AUTH0_DOMAIN,\r\n    clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\r\n    redirectURI: process.env.REACT_APP_AUTH0_REDIRECT_URI\r\n}\r\n","import authConfig from \"./authConfig\";\r\nimport {Auth0Client} from '@auth0/auth0-spa-js';\r\n\r\nconst auth0 = new Auth0Client({\r\n    domain: authConfig.domain,\r\n    client_id: authConfig.clientID,\r\n    redirect_uri: authConfig.redirectURI,\r\n    cacheLocation: 'localstorage',\r\n    useRefreshTokens: true\r\n});\r\n\r\nexport default {\r\n    // called when the user attempts to log in\r\n    login: (url) => {\r\n        if (typeof url === 'undefined') {\r\n            return auth0.loginWithRedirect()\r\n        }\r\n        return auth0.handleRedirectCallback(url.location);\r\n    },\r\n    // called when the user clicks on the logout button\r\n    logout: () => {\r\n        return auth0.isAuthenticated().then(function (isAuthenticated) {\r\n            if (isAuthenticated) { // need to check for this as react-admin calls logout in case checkAuth failed\r\n                return auth0.logout({\r\n                    redirect_uri: window.location.origin,\r\n                    federated: true // have to be enabled to invalidate refresh token\r\n                });\r\n            }\r\n            return Promise.resolve()\r\n        })\r\n    },\r\n    // called when the API returns an error\r\n    checkError: ({status}) => {\r\n        if (status === 401 || status === 403) {\r\n            return Promise.reject();\r\n        }\r\n        return Promise.resolve();\r\n    },\r\n    // called when the user navigates to a new location, to check for authentication\r\n    checkAuth: () => {\r\n        console.log(\"checkAuth\");\r\n        return auth0.isAuthenticated().then(function (isAuthenticated) {\r\n            if (isAuthenticated) {\r\n                return Promise.resolve();\r\n            }\r\n            return auth0.getTokenSilently()\r\n        })\r\n    },\r\n    // called when the user navigates to a new location, to check for permissions / roles\r\n    getPermissions: () => {\r\n        return Promise.resolve()\r\n    },\r\n};\r\n","/**\r\n * Created by lara on 6/5/2021.\r\n * just fake data\r\n */\r\n\r\nconst data = {\r\n    posts: [\r\n        {\r\n            \"userId\": 1,\r\n            \"id\": 1,\r\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n            \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n        },\r\n        {\r\n            \"userId\": 1,\r\n            \"id\": 2,\r\n            \"title\": \"qui est esse\",\r\n            \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\r\n        },\r\n    ],\r\n    users: [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Leanne Grahamey\",\r\n            \"username\": \"Bret\",\r\n            \"email\": \"Sincere@april.biz\",\r\n            \"address\": {\r\n                \"street\": \"Kulas Light\",\r\n                \"suite\": \"Apt. 556\",\r\n                \"city\": \"Gwenborough\",\r\n                \"zipcode\": \"92998-3874\",\r\n                \"geo\": {\r\n                    \"lat\": \"-37.3159\",\r\n                    \"lng\": \"81.1496\"\r\n                }\r\n            },\r\n            \"phone\": \"1-770-736-8031 x56442\",\r\n            \"website\": \"hildegard.org\",\r\n            \"company\": {\r\n                \"name\": \"Romaguera-Crona\",\r\n                \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n                \"bs\": \"harness real-time e-markets\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Ervin Howell\",\r\n            \"username\": \"Antonette\",\r\n            \"email\": \"Shanna@melissa.tv\",\r\n            \"address\": {\r\n                \"street\": \"Victor Plains\",\r\n                \"suite\": \"Suite 879\",\r\n                \"city\": \"Wisokyburgh\",\r\n                \"zipcode\": \"90566-7771\",\r\n                \"geo\": {\r\n                    \"lat\": \"-43.9509\",\r\n                    \"lng\": \"-34.4618\"\r\n                }\r\n            },\r\n            \"phone\": \"010-692-6593 x09125\",\r\n            \"website\": \"anastasia.net\",\r\n            \"company\": {\r\n                \"name\": \"Deckow-Crist\",\r\n                \"catchPhrase\": \"Proactive didactic contingency\",\r\n                \"bs\": \"synergize scalable supply-chains\"\r\n            }\r\n        }\r\n    ],\r\n    comments: [\r\n        {\r\n            \"postId\": 1,\r\n            \"id\": 1,\r\n            \"name\": \"id labore ex et quam laborum\",\r\n            \"email\": \"Eliseo@gardner.biz\",\r\n            \"body\": \"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"\r\n        },\r\n        {\r\n            \"postId\": 1,\r\n            \"id\": 2,\r\n            \"name\": \"quo vero reiciendis velit similique earum\",\r\n            \"email\": \"Jayne_Kuhic@sydney.com\",\r\n            \"body\": \"est natus enim nihil est dolore omnis voluptatem numquam\\net omnis occaecati quod ullam at\\nvoluptatem error expedita pariatur\\nnihil sint nostrum voluptatem reiciendis et\"\r\n        },\r\n    ]};\r\n\r\nexport default data;","import fakerestDataProvider from 'ra-data-fakerest';\r\nimport data from \"../providers/data\";\r\n\r\n\r\n// A function decorating a dataProvider for handling user profiles\r\nconst addUserProfileOverrides = (dataProvider) => ({\r\n    ...dataProvider,\r\n    getUserProfile() {\r\n        const profile = localStorage.getItem(\"userProfile\");\r\n        if (!profile) {\r\n            return Promise.resolve({ data: {} });\r\n        }\r\n        const data = JSON.parse(profile);\r\n        console.log(\"getUserProfile\", data);\r\n        return Promise.resolve({ data });\r\n    },\r\n    async updateUserProfile({ data }) {\r\n        // Convert a newly uploaded file to b64\r\n        const avatar = await (data.avatar.rawFile instanceof File\r\n            ? convertFileToBase64(data.avatar)\r\n            : data.avatar);\r\n\r\n        localStorage.setItem(\r\n            \"userProfile\",\r\n            JSON.stringify({\r\n                ...data,\r\n                id: \"unique_id\",\r\n                avatar\r\n            })\r\n        );\r\n        return Promise.resolve({ data });\r\n    }\r\n});\r\n\r\n/**\r\n * Convert a `File` object returned by the upload input into a base 64 string.\r\n * That's not the most optimized way to store images in production, but it's\r\n * enough to illustrate the idea of data provider decoration.\r\n */\r\nconst convertFileToBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = reject;\r\n\r\n        reader.readAsDataURL(file.rawFile);\r\n    });\r\n\r\nexport default addUserProfileOverrides(\r\n    fakerestDataProvider(data, true)\r\n);","import React from \"react\";\r\nimport { UserMenu, MenuItemLink } from \"react-admin\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { useProfile } from \"./profile\";\r\n\r\nconst MyUserMenu = (props) => {\r\n    const { profileVersion } = useProfile();\r\n    console.log(\"profile version: \" + profileVersion);\r\n    return (\r\n        <UserMenu key={profileVersion} {...props}>\r\n            <MenuItemLink\r\n                to=\"/my-profile\"\r\n                primaryText=\"My Profile\"\r\n                leftIcon={<SettingsIcon />}\r\n            />\r\n            <MenuItemLink\r\n                to=\"/home\"\r\n                primaryText=\"Home\"\r\n                leftIcon={<HomeIcon />}\r\n            />\r\n        </UserMenu>\r\n    );\r\n};\r\n\r\nexport default MyUserMenu;","import React from \"react\";\r\nimport { defaultTheme, Layout, AppBar } from 'react-admin';\r\nimport { createTheme, Box, Typography } from '@mui/material';\r\nimport MyUserMenu from \"./MyUserMenu\";\r\nimport { UserMenu, MenuItemLink } from \"react-admin\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n\r\nconst darkTheme = createTheme({\r\n    palette: { mode: 'dark' },\r\n});\r\n\r\nconst MyAppBar = props => (\r\n    <AppBar {...props} userMenu={<MyUserMenu />}>\r\n        <Box flex=\"1\">\r\n            <Typography variant=\"h6\" id=\"react-admin-title\">test</Typography>\r\n        </Box>\r\n        <MenuItemLink\r\n            to=\"/home\"\r\n            primaryText=\"Home\"\r\n            leftIcon={<HomeIcon />}\r\n        />\r\n        <MenuItemLink\r\n            to=\"/my-profile\"\r\n            primaryText=\"My Profile\"\r\n            leftIcon={<SettingsIcon />}\r\n        />\r\n    </AppBar>\r\n);\r\n\r\nexport default MyAppBar;","import React from \"react\";\r\nimport { Layout } from \"react-admin\";\r\nimport MyAppBar from \"./MyAppBar\";\r\nimport { ProfileProvider } from \"./profile\";\r\n\r\nconst MyLayout = (props) => (\r\n    <ProfileProvider>\r\n        <Layout {...props} appBar={MyAppBar} />\r\n    </ProfileProvider>\r\n);\r\n\r\nexport default MyLayout;","import * as React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { Route } from \"react-router\";\r\n\r\n// material\r\nimport PostIcon from '@material-ui/icons/Book';\r\nimport UserIcon from '@material-ui/icons/Group';\r\nimport { createTheme } from '@material-ui/core/styles';\r\n\r\n// react admin\r\nimport {Admin, Resource, ListGuesser} from 'react-admin';\r\n//import jsonServerProvider from 'ra-data-json-server';\r\n//import fakeDataProvider from 'ra-data-fakerest';\r\n\r\n\r\n// pages\r\nimport {PostList, PostEdit, PostCreate, PostShow} from './pages/posts';\r\nimport {UserList} from './pages/users';\r\nimport loginPage from \"./pages/login\";\r\nimport { ProfileEdit } from \"./components/profile\";\r\n\r\n// components\r\nimport Dashboard from './components/Dashboard';\r\nimport authProvider from './utils/authProvider';\r\nimport dataProvider from \"./utils/dataProvider\";\r\nimport MyLayout from \"./components/MyLayout\";\r\n\r\n// browser history\r\nimport { createBrowserHistory as createHistory } from 'history';\r\nconst history = createHistory();\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        type: 'light', // Switching the dark mode on is a single property value change.\r\n        secondary: {\r\n            main: \"#0C73AE\",\r\n        },\r\n    },\r\n    overrides: {\r\n        // name of style sheet\r\n        MuiFormLabel: {\r\n            root: {\r\n                '&$focused': {\r\n                    color: '#4A90E2'\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst App = () => (\r\n    <Admin\r\n        layout={MyLayout}\r\n        authProvider={authProvider}\r\n        dataProvider={dataProvider}\r\n        customRoutes={[\r\n            <Route\r\n                key=\"my-profile\"\r\n                path=\"/my-profile\"\r\n                render={() => <ProfileEdit />}\r\n            />\r\n        ]}\r\n        history={history}\r\n        dashboard={Dashboard}\r\n        loginPage={loginPage}\r\n        theme={theme}\r\n\r\n\r\n\r\n    >\r\n        <Resource\r\n            name=\"posts\"\r\n            icon={PostIcon}\r\n            list={PostList}\r\n            edit={PostEdit}\r\n            create={PostCreate}\r\n            show={PostShow}\r\n        />\r\n        <Resource name=\"users\" icon={UserIcon} list={UserList}/>\r\n        <Resource name=\"comments\" list={ListGuesser}/>\r\n    </Admin>\r\n);\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log(\r\n                                'New content is available; please refresh.'\r\n                            );\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type').indexOf('javascript') ===\r\n                    -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}